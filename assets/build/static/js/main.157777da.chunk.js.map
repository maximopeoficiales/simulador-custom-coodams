{"version":3,"sources":["api/dto/data/credito.data.ts","config/config.ts","api/utils/numberWithComas.ts","context/TasaContext.ts","api/utils/getCuotaPrestamo.ts","components/FormDetalle/FormDetalle.tsx","components/ModalDetail/ModalDetail.tsx","components/FormSimulador/FormSimulador.tsx","api/utils/creditoFormated.ts","api/utils/addTasasData.ts","api/utils/getTasaByAntiguedad.ts","components/Simulador/Simulador.tsx","components/ui/Spinner/Spinner.tsx","App.tsx","hooks/useFetch/useFetch.ts","api/utils/getUrlApi.ts","reportWebVitals.ts","index.tsx"],"names":["CreditoType","Antiguedad","config","creditoData","id","LIBRE_INVERSION","tasa","nombre","antiguedad","helpText","montoMax","plazos","VIVIENDA","VEHICULO","antiguedades","DE_12_36_MESES","DE_37_120_MESES","MAS_120_MESES","numberWithCommas","x","separator","parts","toString","split","replace","join","TasaContext","createContext","tasaData","getValorCuotaMensual","prestamo","periodo","tasaMensual","Math","pow","FormDetalle","props","data","montoSolicitado","plazo","valorCuotaMensual","round","valorInteresMensual","getValorInteresMensual","className","ModalDetail","visible","setVisible","classVisible","onClick","FormSimulador","useContext","useState","idSeleccionado","setIdSeleccionado","mostrarModal","setMostrarModal","mostrarDetalle","setMostrarDetalle","setMontoSolicitado","creditoNames","setCreditoNames","setPlazo","mostrarAntiguedad","setMostrarAntiguedad","setAntiguedad","setTasa","creditoSeleccionado","setCreditoSeleccionado","useEffect","creditoDataFormated","parseInt","sim_libre_inversion","filter","e","sim_vehiculo","sim_vivienda","creditoDataFilter","creditoData2","parseFloat","tasa_libre_inversion","tasa_vivienda","tasa_vehiculo_1","addTasasDataApi","creditoFilter","find","handleChangeRange","montoMaximo","target","value","onChange","type","min","step","max","htmlFor","idSelect","map","index","tasa_vehiculo_2","tasa_vehiculo_3","getTasaByAntiguedad","console","log","Simulador","defaultProps","text","Spinner","App","url","isMounted","useRef","loading","error","state","setState","current","a","fetch","json","useFetch","URL_GET_OPTIONS","URL_API_BASE","host","location","hostname","urlBase","protocol","includes","getUrlApi","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.157777da.chunk.js","sourcesContent":["export enum CreditoType {\n    LIBRE_INVERSION = \"LIBRE_INVERSION\",\n    VIVIENDA = \"VIVIENDA\",\n    VEHICULO = \"VEHICULO\",\n    VEHICULO1 = \"VEHICULO1\",\n    VEHICULO2 = \"VEHICULO2\",\n    VEHICULO3 = \"VEHICULO3\",\n}\nexport enum Antiguedad {\n    DE_12_36_MESES = \"12 - 36 meses\",\n    DE_37_120_MESES = \"37 - 120 meses\",\n    MAS_120_MESES = \"Más de 120 meses\"\n}\nexport interface CreditoData {\n    id: CreditoType;\n    tasa?: number;\n    antiguedad: string;\n    helpText: string;\n    nombre: string;\n    montoMax: number\n    plazos: number[];\n    antiguedades?: Antiguedad[]\n}\n\nexport const creditoData: CreditoData[] = [\n    {\n        id: CreditoType.LIBRE_INVERSION,\n        tasa: 1.6,\n        nombre: \"Libre Inversíon (especial)\",\n        antiguedad: \"\",\n        helpText: \"\",\n        montoMax: 5269451,\n        plazos: [18, 24],\n    },\n    {\n        id: CreditoType.VIVIENDA,\n        tasa: 1.3,\n        nombre: \"Vivienda\",\n        antiguedad: \"\",\n        helpText: \"Antiguedad minima de 12 meses\",\n        montoMax: 181705200,\n        plazos: [84, 96, 108, 120],\n    },\n    {\n        id: CreditoType.VEHICULO,\n        tasa: 1.3,\n        nombre: \"Vehiculo\",\n        antiguedad: \"12 - 36 meses\",\n        helpText: \"\",\n        montoMax: 45426300,\n        plazos: [12, 24, 36, 48, 60],\n        antiguedades: [Antiguedad.DE_12_36_MESES, Antiguedad.DE_37_120_MESES, Antiguedad.MAS_120_MESES]\n\n    },\n]","export const config = {\n    URL_API_BASE: \"http://localhost\",\n    URL_GET_OPTIONS: \"wp-json/simulador/v1/getOptions\"\n}","export const numberWithCommas = (x: number, separator: string = \",\"): string => {\n    var parts = x.toString().split(separator);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator);\n    return parts.join(\",\");\n}","import { createContext } from 'react'\nimport { TasaData } from '../api/dto/tasa.dto';\n\ninterface TasaProvider {\n    tasaData: TasaData,\n}\n\nexport const TasaContext = createContext<TasaProvider>({ tasaData: {} });","export const getValorCuotaMensual = (prestamo: number, periodo: number, tasa: number) => {\n    let tasaMensual = (tasa / 100);\n    let total = prestamo * (tasaMensual / (1 - Math.pow((1 + tasaMensual), -periodo)));\n    return total;\n}\n\n\nexport const getValorInteresMensual = (prestamo: number, periodo: number, tasa: number) => {\n    let valorCuotaMensual = getValorCuotaMensual(prestamo, periodo, tasa);\n\n    return ((valorCuotaMensual * periodo) - prestamo);\n}\n","import {\n  getValorCuotaMensual,\n  getValorInteresMensual,\n} from \"../../api/utils/getCuotaPrestamo\";\nimport { numberWithCommas } from \"../../api/utils/numberWithComas\";\n\ninterface MyProps {\n  data: { montoSolicitado: number; tasa: number; plazo: number };\n}\nconst FormDetalle = (props: MyProps) => {\n  const { montoSolicitado, plazo, tasa } = props.data;\n\n  let valorCuotaMensual = Math.round(\n    getValorCuotaMensual(montoSolicitado, plazo, tasa)\n  );\n\n  let valorInteresMensual = Math.round(\n    getValorInteresMensual(montoSolicitado, plazo, tasa)\n  );\n  return (\n    <div data-testid=\"FormDetalle\" className=\"\">\n      {/* <h1>FormDetalle component</h1> */}\n      <div className=\"d-flex justify-content-between my-2\">\n        <span>\n          <b>Tasa de Interes</b>\n        </span>\n        <span>\n          <b className=\"simulador-color-valor\">{tasa} %</b>\n        </span>\n      </div>\n      <div className=\"d-flex justify-content-between my-2\">\n        <span>\n          <b className=\"simulador-color-valor\">Valor Cuota Mensual</b>\n        </span>\n        <span>\n          <b className=\"simulador-color-valor\">\n            ${numberWithCommas(valorCuotaMensual)}\n          </b>\n        </span>\n      </div>\n      <div className=\"d-flex justify-content-between my-2\">\n        <span>\n          <b>Valor Interes Mensual</b>\n        </span>\n        <span>\n          <b>${numberWithCommas(valorInteresMensual)}</b>\n        </span>\n      </div>\n\n      <div className=\"mt-4\">\n        <span>\n          <b>Nota:</b>\n        </span>\n        <p className=\"my-0 text-muted\">\n          Si tienes la opción de realizar abonos extras, consulta con un asesor\n          y revisa tu proyección\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default FormDetalle;\n","import { useState } from \"react\";\nimport FormDetalle from \"../FormDetalle/FormDetalle\";\nimport \"./ModalDetail.css\";\n\ninterface MyProps {\n  data: { montoSolicitado: number; tasa: number; plazo: number };\n  visible: boolean;\n  setVisible: any;\n}\nconst ModalDetail = (props: MyProps) => {\n  const { data, visible, setVisible } = props;\n\n  let classVisible = visible ? \"is-visible\" : \"\";\n  const hidden = () => {\n    setVisible(\"\");\n  };\n  return (\n    <div>\n      <div className={`modal ${classVisible}`} data-animation=\"slideInOutLeft\">\n        <div className=\"modal-dialog\">\n          <header className=\"modal-header\">\n            <h3 className=\"my-0\">\n              <b>Detalle del Prestamo</b>\n            </h3>\n            <button\n              className=\"close-modal\"\n              aria-label=\"close modal\"\n              data-close\n              onClick={hidden}\n            >\n              ✕\n            </button>\n          </header>\n          <section className=\"modal-content\">\n            <FormDetalle data={data} />\n          </section>\n          {/* <footer className=\"modal-footer\">\n            The footer of the first modal\n          </footer> */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModalDetail;\n","import { ChangeEvent, useContext, useEffect, useState } from \"react\";\nimport {\n  CreditoData,\n  creditoData,\n  CreditoType,\n} from \"../../api/dto/data/credito.data\";\nimport { addTasasDataApi } from \"../../api/utils/addTasasData\";\nimport { creditoDataFilter } from \"../../api/utils/creditoFormated\";\nimport { getTasaByAntiguedad } from \"../../api/utils/getTasaByAntiguedad\";\nimport { numberWithCommas } from \"../../api/utils/numberWithComas\";\nimport { TasaContext } from \"../../context/TasaContext\";\nimport FormDetalle from \"../FormDetalle/FormDetalle\";\nimport ModalDetail from \"../ModalDetail/ModalDetail\";\n\ninterface MyProps {}\nconst FormSimulador = (props: MyProps) => {\n  const { tasaData } = useContext(TasaContext);\n  // states\n  const [idSeleccionado, setIdSeleccionado] = useState<string>(\n    CreditoType.LIBRE_INVERSION\n  );\n  const [mostrarModal, setMostrarModal] = useState(false);\n  const [mostrarDetalle, setMostrarDetalle] = useState(false);\n  const [montoSolicitado, setMontoSolicitado] = useState(1);\n  const [creditoNames, setCreditoNames] = useState<CreditoData[]>([]);\n  const [plazo, setPlazo] = useState(1);\n  const [mostrarAntiguedad, setMostrarAntiguedad] = useState(false);\n  const [antiguedad, setAntiguedad] = useState(\"\");\n  const [tasa, setTasa] = useState(0);\n  const [creditoSeleccionado, setCreditoSeleccionado] = useState<\n    Partial<CreditoData>\n  >({});\n\n  // effects\n  useEffect(() => {\n    // obtengo opciones por defecto\n    const creditoDataFormated = creditoDataFilter(creditoData, tasaData);\n    setCreditoNames(creditoDataFormated);\n  }, [tasaData]);\n\n  useEffect(() => {\n    let creditoData2 = addTasasDataApi(creditoData, tasaData);\n    let creditoFilter = creditoData2.find((e) => e.id === idSeleccionado);\n    setTasa(creditoFilter?.tasa ?? 0);\n    setCreditoSeleccionado(creditoFilter ?? {});\n  }, [idSeleccionado, tasaData]);\n\n  // events listener\n  const handleChangeRange = (e: ChangeEvent<HTMLInputElement>) => {\n    let montoMaximo = creditoSeleccionado?.montoMax ?? 1;\n    if (parseFloat(e.target.value) <= montoMaximo) {\n      setMontoSolicitado(parseFloat(e.target.value));\n    } else {\n      setMontoSolicitado(0);\n    }\n  };\n\n  const handleChangePlazo = (e: ChangeEvent<HTMLSelectElement>) => {\n    setPlazo(parseInt(e.target.value));\n  };\n\n  const handlerChangeSelectCredito = (e: ChangeEvent<HTMLSelectElement>) => {\n    setMontoSolicitado(0);\n    let idSelect = e.target.value;\n    setIdSeleccionado(idSelect);\n    setMostrarAntiguedad(idSelect === CreditoType.VEHICULO);\n  };\n\n  const handleChangeAntiguedad = (e: ChangeEvent<HTMLSelectElement>) => {\n    let tasa = getTasaByAntiguedad(e.target.value, tasaData);\n    setTasa(tasa);\n    setAntiguedad(e.target.value);\n  };\n\n  const calcularCredito = () => {\n    setMostrarDetalle(true);\n    setMostrarModal(true);\n    console.log(montoSolicitado, tasa, plazo);\n  };\n\n  return (\n    <div className=\"container-simulador\">\n      <div className=\"\">\n        <div className=\"d-flex justify-content-between\">\n          <span>\n            <b>Monto Solicitado</b>\n          </span>\n\n          <span>\n            <b className=\"simulador-color-valor\">$ {numberWithCommas(montoSolicitado)}</b>\n          </span>\n        </div>\n        <div className=\"d-flex\">\n          <input\n            onChange={handleChangeRange}\n            type=\"number\"\n            className=\"w-100 my-2 simulador-scroll-input\"\n            min=\"0\"\n            step=\"0.01\"\n            max={creditoSeleccionado?.montoMax ?? 1}\n            value={montoSolicitado}\n          />\n        </div>\n        <div className=\"\">\n          <input\n            onChange={handleChangeRange}\n            type=\"range\"\n            className=\"w-100\"\n            min=\"0\"\n            max={creditoSeleccionado?.montoMax ?? 1}\n            value={montoSolicitado}\n          />\n          <small className=\"text-muted\">\n            Desliza para elegir el monto deseado de su préstamo\n          </small>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"idSelectCredito\" className=\"d-flex my-2\">\n            <b>Crédito</b>\n          </label>\n          <select\n            id=\"idSelectCredito\"\n            className=\"w-100\"\n            onChange={handlerChangeSelectCredito}\n            value={idSeleccionado}\n          >\n            {creditoNames.map((e) => (\n              <option key={e.id} value={e.id}>\n                {e.nombre}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"idSelectPlazo\" className=\"d-flex my-2\">\n            <b>Plazos / Cuotas</b>\n          </label>\n          <select\n            id=\"idSelectPlazo\"\n            className=\"w-100 \"\n            onChange={handleChangePlazo}\n            value={plazo}\n          >\n            {creditoSeleccionado?.plazos?.map((e, index) => (\n              <option key={e} value={e}>\n                {e}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {mostrarAntiguedad && (\n          <div className=\"form-group\">\n            <label htmlFor=\"idSelectAntiguedad\" className=\"d-flex my-2\">\n              <b>Antiguedad</b>\n            </label>\n            <select\n              id=\"idSelectAntiguedad\"\n              className=\"w-100\"\n              onChange={handleChangeAntiguedad}\n              value={antiguedad}\n            >\n              {creditoSeleccionado?.antiguedades?.map((e, index) => (\n                <option key={e} value={e}>\n                  {e}\n                </option>\n              ))}\n            </select>\n            <small className=\"text-muted my-2 d-block\">\n              Selecciona la Antiguedad como asociado de la cooperativa\n            </small>\n          </div>\n        )}\n        <button onClick={calcularCredito} className=\"my-2 w-100 simulador-button\">\n          Calcular\n        </button>\n      </div>\n\n      <div className=\"my-auto\">\n        {mostrarDetalle ? (\n          <>\n            <h2>Detalle del Prestamo</h2>\n            <FormDetalle data={{ tasa, plazo, montoSolicitado }} />\n            <ModalDetail\n              data={{ tasa, plazo, montoSolicitado }}\n              visible={mostrarModal}\n              setVisible={setMostrarModal}\n            />\n          </>\n        ) : (\n          <p>\n            <b>Una Imagen</b>\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FormSimulador;\n","import { CreditoData, CreditoType } from \"../dto/data/credito.data\"\nimport { TasaData } from \"../dto/tasa.dto\"\n\nexport const creditoDataFilter = (data: CreditoData[], tasaData: TasaData): CreditoData[] => {\n    if (!(parseInt(tasaData.sim_libre_inversion ?? \"\"))) {\n        data = data.filter(e => e.id !== CreditoType.LIBRE_INVERSION);\n    }\n\n    if (!(parseInt(tasaData.sim_vehiculo ?? \"\"))) {\n        data = data.filter(e => e.id !== CreditoType.VEHICULO);\n    }\n\n    if (!(parseInt(tasaData.sim_vivienda ?? \"\"))) {\n        data = data.filter(e => e.id !== CreditoType.VIVIENDA);\n    }\n    return data;\n}","import { CreditoData } from \"../dto/data/credito.data\";\nimport { TasaData } from \"../dto/tasa.dto\";\n\nexport const addTasasDataApi = (creditoData: CreditoData[], tasaData: TasaData) => {\n    creditoData[0].tasa = parseFloat(tasaData.tasa_libre_inversion?.toString() ?? \"1.6\");\n    creditoData[1].tasa = parseFloat(tasaData.tasa_vivienda?.toString() ?? \"1.3\");\n    creditoData[2].tasa = parseFloat(tasaData.tasa_vehiculo_1?.toString() ?? \"1.3\");\n    return creditoData;\n}","import { Antiguedad } from \"../dto/data/credito.data\";\nimport { TasaData } from \"../dto/tasa.dto\";\n\nexport const getTasaByAntiguedad = (antiguedad: string, tasaData: TasaData): number => {\n    let tasa = 0;\n    switch (antiguedad) {\n        case Antiguedad.DE_12_36_MESES:\n            tasa = tasaData.tasa_vehiculo_1 ?? 1.3;\n            break;\n        case Antiguedad.DE_37_120_MESES:\n            tasa = tasaData.tasa_vehiculo_2 ?? 1.2;\n            break;\n        case Antiguedad.MAS_120_MESES:\n            tasa = tasaData.tasa_vehiculo_3 ?? 1.1;\n            break;\n        default:\n            break;\n    }\n\n    return tasa;\n}","import FormSimulador from \"../FormSimulador/FormSimulador\";\n\ninterface MyProps {}\nconst Simulador = (props: MyProps) => {\n  return (\n    <div data-testid=\"Simulador\" className=\"container\">\n      <FormSimulador />\n    </div>\n  );\n};\n\nexport default Simulador;\n","import \"./Spinner.css\";\ninterface MyProps {\n  text?: string;\n}\nconst defaultProps = {\n  text: \"Loading...\",\n};\nconst Spinner = (props: MyProps) => {\n  props = { ...defaultProps, ...props };\n  const { text } = props;\n  return <div className=\"loader\">{text}</div>;\n};\n\nexport default Spinner;\n","import { getUrlApi } from \"./api/utils/getUrlApi\";\nimport \"./App.css\";\nimport Simulador from \"./components/Simulador/Simulador\";\nimport Spinner from \"./components/ui/Spinner/Spinner\";\nimport { TasaContext } from \"./context/TasaContext\";\nimport { useFetch } from \"./hooks/useFetch/useFetch\";\n\nfunction App() {\n  const URL_API = getUrlApi();\n  const { data, loading } = useFetch(URL_API);\n\n  if (loading) {\n    return (\n      <>\n        <h4 className=\"text-center\">Cargando Simulador ...</h4>\n        <Spinner />\n      </>\n    );\n  }\n\n  return (\n    <TasaContext.Provider value={{ tasaData: data }}>\n      <Simulador />\n    </TasaContext.Provider>\n  );\n}\n\nexport default App;\n","import { useEffect, useRef, useState } from \"react\";\n\n\nexport interface UseFecthData {\n    data: any,\n    loading: boolean,\n    error: any\n}\nexport const useFetch = (url: string) => {\n    // uso de useRef\n    const isMounted = useRef(true);\n    const [state, setState] = useState<UseFecthData>(\n        {\n            data: null, loading: true, error: null\n        }\n    );\n\n    useEffect(() => {\n        // cuando se desmonte el componente la referencia estara en false\n        return () => {\n\n            isMounted.current = false\n        }\n    }, []);\n\n    useEffect(() => {\n        (async () => {\n            try {\n                let data = (await (await fetch(url)).json());\n                if (isMounted.current) {\n                    setState({ loading: false, data, error: null });\n                } else {\n                    // console.log(\"El useState no se esta ejecutando \");\n\n                }\n            } catch (error) {\n                setState({ loading: true, data: null, error: \"No se pudo cargar la info\" });\n            }\n\n        })()\n    }, [url])\n\n\n    return state;\n}\n","import { config } from \"../../config/config\";\n\nexport const getUrlApi = () => {\n    let { URL_GET_OPTIONS, URL_API_BASE } = config;\n    // eslint-disable-next-line no-restricted-globals\n    let host = location.hostname;\n    // eslint-disable-next-line no-restricted-globals\n    let protocol = location.protocol;\n    let urlBase = protocol + \"//\" + host;\n    if (host.includes(\"localhost\")) {\n        urlBase = URL_API_BASE;\n    }\n\n    return `${urlBase}/${URL_GET_OPTIONS}`;\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root-simulador\")\n);\n\n// If you want to start measuring pe+rformance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}